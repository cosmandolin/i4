def func1(arg1, arg2):
    var3 = func4()
    def func5(arg4, arg5):
        var6 = var3 ^ (458044866 & (922444065 | -275)) | (((var3 | arg4 + 356) | arg5 - (892 ^ arg1 | arg2)) & 597310703 + arg1)
        var7 = arg1 | 1860785600 + 652 ^ (arg5 + arg4)
        var8 = -1311238722 - ((((arg2 + (var3 ^ arg5 ^ ((arg5 - var6 ^ arg4) & (arg1 - arg5 ^ (var6 + var7 + 318 + (arg4 ^ arg2) + arg5)))) | arg5 + (823342698 & arg1)) - -51516813) ^ -923) & arg1) ^ var6
        var9 = arg4 & arg4
        var10 = (var7 - var8 | arg2) - arg2 - arg5 ^ arg2
        result = 993 - 1128431665 + arg2 ^ ((var8 + ((arg4 - 12) + -145) ^ arg2) + arg4) & arg1 ^ var3 & var6
        return result
    var11 = func5(arg2, arg1)
    def func6(arg12, arg13):
        var14 = arg2 | var11 + arg13 & arg12
        var15 = arg13 + arg1 ^ arg13 & -398
        var16 = arg1 ^ arg13 ^ -910 + 2051336754
        var17 = (var16 + 217) & arg13
        var18 = arg2 | arg1
        var19 = var16 ^ arg12 - (var15 - arg13)
        var20 = var3 | ((421 & var11) ^ arg13)
        var21 = var18 - (var19 ^ arg2 - var11)
        var22 = arg1 ^ var11
        var23 = 897955449 ^ var15
        var24 = var22 | (var18 | var15) ^ var11
        var25 = var3 | var22
        var26 = (var14 | var25 - var16) - var11
        var27 = (var20 | arg13 | var15) - var18
        var28 = var25 + arg13 + var19 | var19
        var29 = (var28 - arg2) - var20
        var30 = (var28 | var25) & var28 - var3
        if var16 < arg13:
            var31 = var17 - var14 | var15 + arg1
        else:
            var31 = (arg2 & var30) - var30 + arg1
        var32 = var22 + -112
        var33 = var26 - (var25 & arg1) & arg13
        var34 = 369 | 1686857921 & var14
        var35 = var23 ^ var33
        var36 = ((arg12 - 482) - var27) - var30
        if arg2 < var28:
            var37 = var16 & arg13 ^ var19 | var25
        else:
            var37 = ((var32 & 625) + var24) + var24
        result = (var36 + (var32 + var16) | var19 + var28 + var25 ^ var14 ^ var18) - var15
        return result
    var38 = func6(arg1, var3)
    var43 = func7(var3, var38)
    var48 = func8(var11, arg2)
    var49 = (var3 ^ -784607073 - arg2) | arg2
    var50 = ((var43 | var48) + var49) - var48
    var51 = arg1 & ((var48 ^ -31) - -1079975080)
    var52 = var48 | -795
    var53 = var51 & (arg2 - arg1) - var52
    var54 = var49 | arg2
    var55 = -911936912 - -823470451 + var54 | arg1
    if var43 < arg2:
        var56 = var43 - ((var43 | var53) & var55)
    else:
        var56 = (1651023803 ^ arg1 & var49) - var43
    var57 = var53 ^ ((var49 | arg1) + var50)
    var58 = var38 & (var53 + arg2) - var43
    result = var3 | var55 & (var50 ^ (arg2 | (var57 + 735 | var11 + arg1) & var51) ^ var43 ^ var51 - var43)
    return result
def func8(arg44, arg45):
    var46 = 0
    for var47 in xrange(49):
        var46 += arg45 & (4 - arg45)
    return var46
def func7(arg39, arg40):
    var41 = 0
    for var42 in range(47):
        if arg40 < arg40:
            var41 += arg39 + arg40
        else:
            var41 += arg39 - arg40
    return var41
def func4():
    func2()
    result = len(range(25))
    func3()
    return result
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : -5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
